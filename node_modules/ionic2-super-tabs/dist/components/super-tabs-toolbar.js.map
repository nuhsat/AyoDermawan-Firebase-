{"version":3,"sources":["../../src/components/super-tabs-toolbar.ts"],"names":[],"mappings":"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","file":"super-tabs-toolbar.js","sourceRoot":"","sourcesContent":["import {\r\n  Component, Input, Output, EventEmitter, ElementRef, ViewChildren, QueryList,\r\n  ViewEncapsulation, ViewChild, Renderer2, AfterViewInit, OnDestroy\r\n} from '@angular/core';\r\nimport { Platform, DomController } from 'ionic-angular';\r\nimport { SuperTabsPanGesture } from '../super-tabs-pan-gesture';\r\nimport { SuperTabsConfig } from './super-tabs';\r\nimport { SuperTabButton } from \"./super-tab-button\";\r\n\r\n\r\nexport class SuperTabsToolbar implements AfterViewInit, OnDestroy {\r\n\r\n  \r\n  color: string = '';\r\n\r\n  \r\n  tabsColor: string = '';\r\n\r\n  \r\n  badgeColor: string = '';\r\n\r\n  \r\n  scrollTabs: boolean = false;\r\n\r\n  \r\n  indicatorColor: string = '';\r\n\r\n  \r\n  selectedTab: number = 0;\r\n\r\n  \r\n  config: SuperTabsConfig;\r\n\r\n  \r\n  tabsPlacement: string;\r\n\r\n  indicatorPosition: number = 0;\r\n\r\n  indicatorWidth: number = 0;\r\n\r\n  \r\n  tabSelect: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  \r\n  private tabButtons: QueryList<SuperTabButton>;\r\n\r\n  \r\n  private tabButtonsContainer: ElementRef;\r\n\r\n  \r\n  private indicator: ElementRef;\r\n\r\n  \r\n  private tabButtonsBar: ElementRef;\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  segmentPosition: number = 0;\r\n\r\n  /**\r\n   * The width of each button\r\n   */\r\n  segmentButtonWidths: number[] = [];\r\n\r\n  /**\r\n   * The segment width\r\n   */\r\n  segmentWidth: number = 0;\r\n\r\n  tabs: any[] = [];\r\n\r\n  private gesture: SuperTabsPanGesture;\r\n\r\n  private animationState = {\r\n    indicator: false,\r\n    segment: false\r\n  };\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private plt: Platform,\r\n    private rnd: Renderer2,\r\n    private domCtrl: DomController\r\n  ) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.gesture = new SuperTabsPanGesture(this.plt, this.tabButtonsContainer.nativeElement, this.config, this.rnd);\r\n    this.gesture.onMove = (delta: number) => {\r\n\r\n      let newCPos = this.segmentPosition + delta;\r\n\r\n      let mw: number = this.el.nativeElement.offsetWidth,\r\n        cw: number = this.segmentWidth;\r\n\r\n      newCPos = Math.max(0, Math.min(newCPos, cw - mw));\r\n      this.setSegmentPosition(newCPos);\r\n\r\n    };\r\n\r\n    if (this.scrollTabs) {\r\n      this.plt.timeout(() => {\r\n        this.indexSegmentButtonWidths();\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.gesture && this.gesture.destroy();\r\n  }\r\n\r\n  onTabSelect(index: number) {\r\n    this.tabSelect.emit(index);\r\n  }\r\n\r\n  alignIndicator(position: number, width: number, animate?: boolean) {\r\n    this.setIndicatorProperties(width, position, animate);\r\n  }\r\n\r\n  setIndicatorPosition(position: number, animate?: boolean) {\r\n    this.setIndicatorProperties(this.indicatorWidth, position, animate);\r\n  }\r\n\r\n  setIndicatorWidth(width: number, animate?: boolean) {\r\n    this.setIndicatorProperties(width, this.indicatorPosition, animate);\r\n  }\r\n\r\n  setIndicatorProperties(width: number, position: number, animate?: boolean) {\r\n    this.indicatorWidth = width;\r\n    this.indicatorPosition = position;\r\n    const scale = width / 100;\r\n    this.toggleAnimation('indicator', animate);\r\n    this.rnd.setStyle(this.indicator.nativeElement, this.plt.Css.transform,  'translate3d(' + (position - this.segmentPosition) + 'px, 0, 0) scale3d(' + scale + ', 1, 1)')\r\n  }\r\n\r\n  setSegmentPosition(position: number, animate?: boolean) {\r\n    this.segmentPosition = position;\r\n    this.toggleAnimation('segment', animate);\r\n    this.rnd.setStyle(this.tabButtonsBar.nativeElement, this.plt.Css.transform, `translate3d(${-1 * position}px,0,0)`);\r\n    this.setIndicatorPosition(this.indicatorPosition, animate);\r\n  }\r\n\r\n\r\n  /**\r\n   * Enables/disables animation\r\n   * @param el\r\n   * @param animate\r\n   */\r\n  private toggleAnimation(el: 'indicator' | 'segment', animate: boolean) {\r\n\r\n    if (!this.config || this.config.transitionDuration === 0)\r\n      return;\r\n\r\n    // only change style if the value changed\r\n    if (this.animationState[el] === animate) return;\r\n\r\n    this.animationState[el] = animate;\r\n\r\n    const _el: HTMLElement = el === 'indicator'? this.indicator.nativeElement : this.tabButtonsBar.nativeElement;\r\n    const value: string = animate? `all ${this.config.transitionDuration}ms ${this.config.transitionEase}` : 'initial';\r\n\r\n    this.rnd.setStyle(_el, this.plt.Css.transition, value);\r\n\r\n  }\r\n\r\n  /**\r\n   * Indexes the segment button widths\r\n   */\r\n  indexSegmentButtonWidths() {\r\n    let index = [], total = 0;\r\n\r\n    this.tabButtons.forEach((btn: SuperTabButton, i: number) => {\r\n      index[i] = btn.getNativeElement().offsetWidth;\r\n      total += index[i];\r\n    });\r\n\r\n    this.segmentButtonWidths = index;\r\n    this.segmentWidth = total;\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'super-tabs-toolbar',\r\n  template: `\r\n    <ion-toolbar [color]=\"color\" mode=\"md\" [class.scroll-tabs]=\"scrollTabs\">\r\n      <div class=\"tab-buttons-container\" #tabButtonsContainer>\r\n        <div *ngIf=\"tabsPlacement === 'bottom'\" class=\"indicator {{ 'button-md-' + indicatorColor }}\" #indicator></div>\r\n        <div class=\"tab-buttons\" #tabButtons>\r\n          <super-tab-button *ngFor=\"let tab of tabs; let i = index\" (select)=\"onTabSelect(i)\" [title]=\"tab.title\" [icon]=\"tab.icon\" [badge]=\"tab.badge\" [selected]=\"selectedTab === i\" [color]=\"tabsColor\" [badgeColor]=\"badgeColor\"></super-tab-button>\r\n        </div>\r\n        <div *ngIf=\"tabsPlacement === 'top'\" class=\"indicator {{ 'button-md-' + indicatorColor }}\" #indicator></div>\r\n      </div>\r\n    </ion-toolbar>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Platform, },\n{type: Renderer2, },\n{type: DomController, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'tabsColor': [{ type: Input },],\n'badgeColor': [{ type: Input },],\n'scrollTabs': [{ type: Input },],\n'indicatorColor': [{ type: Input },],\n'selectedTab': [{ type: Input },],\n'config': [{ type: Input },],\n'tabsPlacement': [{ type: Input },],\n'tabSelect': [{ type: Output },],\n'tabButtons': [{ type: ViewChildren, args: [SuperTabButton, ] },],\n'tabButtonsContainer': [{ type: ViewChild, args: ['tabButtonsContainer', ] },],\n'indicator': [{ type: ViewChild, args: ['indicator', ] },],\n'tabButtonsBar': [{ type: ViewChild, args: ['tabButtons', ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}