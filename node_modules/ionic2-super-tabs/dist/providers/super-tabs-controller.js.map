{"version":3,"sources":["../../src/providers/super-tabs-controller.ts"],"names":[],"mappings":"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","file":"super-tabs-controller.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { SuperTabs } from '../components/super-tabs';\r\n\r\n\r\nexport class SuperTabsController {\r\n\r\n  private instances: SuperTabs[] = [];\r\n\r\n  setBadge(tabId: string, value: number, tabsId?: string) {\r\n    const instance = this.getInstance(tabsId);\r\n    instance && instance.setBadge(tabId, value);\r\n  }\r\n\r\n  clearBadge(tabId: string, tabsId?: string) {\r\n    const instance = this.getInstance(tabsId);\r\n    instance && instance.clearBadge(tabId);\r\n  }\r\n\r\n  increaseBadge(tabId: string, increaseBy: number = 1, tabsId?: string) {\r\n    const instance = this.getInstance(tabsId);\r\n    instance && instance.increaseBadge(tabId, increaseBy);\r\n  }\r\n\r\n  decreaseBadge(tabId: string, decreaseBy: number = 1, tabsId?: string) {\r\n    const instance = this.getInstance(tabsId);\r\n    instance && instance.decreaseBadge(tabId, decreaseBy);\r\n  }\r\n\r\n  /**\r\n   * Enables/disables swiping on a specific tabs instance\r\n   * @param enable\r\n   * @param [tabsId]\r\n   */\r\n  enableTabsSwipe(enable: boolean, tabsId?: string) {\r\n    const instance = this.getInstance(tabsId);\r\n    instance && instance.enableTabsSwipe(enable);\r\n  }\r\n\r\n  /**\r\n   * Enables/disables swiping when this tab is active\r\n   * @param tabId\r\n   * @param enable\r\n   * @param [tabsId]\r\n   */\r\n  enableTabSwipe(tabId: string, enable: boolean, tabsId?: string) {\r\n    const instance = this.getInstance(tabsId);\r\n    instance && instance.enableTabSwipe(tabId, enable);\r\n  }\r\n\r\n  showToolbar(show: boolean, tabsId?: string) {\r\n    const instance = this.getInstance(tabsId);\r\n    instance && instance.showToolbar(show);\r\n  }\r\n\r\n  slideTo(tabIndexOrId: string | number, tabsId?: string) {\r\n    const instance = this.getInstance(tabsId);\r\n    instance && instance.slideTo(tabIndexOrId);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  registerInstance(instance: SuperTabs) {\r\n    this.instances.push(instance);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  unregisterInstance(id: string) {\r\n    const instanceIndex = this.getInstanceIndex(id);\r\n    if (instanceIndex > -1)\r\n      this.instances.splice(instanceIndex, 1);\r\n  }\r\n\r\n  private getInstanceIndex(id: string): number {\r\n    return this.instances.findIndex((instance: SuperTabs) => instance.id === id);\r\n  }\r\n\r\n  private getInstance(id?: string): SuperTabs {\r\n    return (!!id && this.instances[this.getInstanceIndex(id)]) || this.instances[0];\r\n  }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}